name: Pipeline-CI

on:
  push:
    branches:
      - '*'

jobs:
  ci:
    runs-on: ubuntu-latest
    continue-on-error: false
    
    services:
      mysql:
        image: mysql
        env:
          MYSQL_PASSWORD: Admin1234
        ports:
          - "3306:3306"
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Checks out your repository
      - uses: actions/checkout@v2

      # Setup PHP environment
      - name: Setup PHP, extensions and composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json

      # Cache dependencies
      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}

      # Install Composer dependencies
      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      # Install npm dependencies and build assets
      - name: Build assets with npm
        run: npm install && npm run build

      # Install Symfony CLI
      - name: Install Symfony CLI
        run: |
          curl -sS https://get.symfony.com/cli/installer | bash
          mv /home/runner/.symfony/bin/symfony /usr/local/bin/symfony

      # Check Symfony vulnerabilities
      - name: Symfony Check Vulnerabilities
        run: symfony check:security

      # PHP CS Fixer
      - name: Run PHP-CS-Fixer
        run: |
          composer require friendsofphp/php-cs-fixer
          ./vendor/bin/php-cs-fixer fix --dry-run

      # PHP Stan
      - name: Run PHPStan
        run: |
          ./vendor/bin/simple-phpunit install
          composer require phpstan/phpstan
          composer require phpstan/extension-installer
          composer config allow-plugins.phpstan/extension-installer true
          composer require phpstan/phpstan-symfony
          ./vendor/bin/phpstan analyse src --memory-limit 1G

      # Lint YAML files
      - name: Lint YAML files
        run: ./bin/console lint:yaml config --parse-tags

      # Lint Twig templates
      - name: Lint Twig templates
        run: ./bin/console lint:twig templates --env=prod

      # Lint Parameters and Services
      - name: Lint Parameters and Services
        run: ./bin/console lint:container --no-debug

      # Validate Doctrine schema
      - name: Validate Doctrine schema
        run: ./bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

      # Run PHPUnit tests
      - name: Run PHPUnit
        env:
          APP_ENV: test
          DATABASE_URL: "mysql://admin:Afpa1234@mysql:3306/project?serverVersion=8.3.7&charset=utf8mb4"
        run: |
          symfony console doctrine:database:create --if-not-exists --no-interaction
          symfony console doctrine:migrations:migrate --no-interaction
          symfony console doctrine:fixtures:load --no-interaction
          ./bin/phpunit
